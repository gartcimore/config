services:

############################
# PROWLARR
############################
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ${DOCKER_CONFIG_DIR}/prowlarr/data:/config
    ports:
      - 9696:9696
    restart: unless-stopped

############################
# RADARR
############################
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ${DOCKER_CONFIG_DIR}/radarr:/config
      - /mnt/dataYmir/:/data 
    ports:
      - 7878:7878
    restart: unless-stopped

############################
# SONARR
############################
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ${DOCKER_CONFIG_DIR}/sonarr:/config
      - /mnt/dataYmir/:/data
      - /mnt/data/:/dataDrogo
    ports:
      - 8989:8989
    restart: unless-stopped

############################
# BAZARR
############################
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ${DOCKER_CONFIG_DIR}/bazarr:/config
      - /mnt/dataYmir/:/data
    ports:
      - 6767:6767
    restart: unless-stopped

############################
# LIDARR
############################
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ${DOCKER_CONFIG_DIR}/lidarr:/config
      - /mnt/dataYmir/:/data 
    ports:
      - 8686:8686
    restart: unless-stopped

############################
# JELLYFIN	
############################

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin 
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - JELLYFIN_PublishedServerUrl=http://192.168.0.20 #optional
    volumes:
      - ${DOCKER_CONFIG_DIR}/jellyfin:/config
      - /mnt/dataYmir/media:/mediaYmir
      - /mnt/data/media:/mediaDrogo
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    restart: unless-stopped

############################
# JELLYSEER
############################
  jellyseer:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseer
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
    volumes:
      - ${DOCKER_CONFIG_DIR}/jellyseer:/app/config
    ports:
      - 5055:5055
    restart: unless-stopped

############################
# HOMARR
############################
  homarr:
      image: ghcr.io/homarr-labs/homarr:latest
      container_name: homarr
      environment:
        - SECRET_ENCRYPTION_KEY=83844736d94ee288f4ec20f0b2bb82dd83a6edb8bd45602c85de49d2869d85d9
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
        - ${DOCKER_CONFIG_DIR}/homarr:/appdata
      ports:
        - '7575:7575'
      restart: unless-stopped

############################
# GLUETUN
############################

  gluetun:
    image: qmcgaw/gluetun:v3
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8080:8080/tcp # qbittorrent
    environment:
      - TZ=${TZ}
      - UPDATER_PERIOD=24h
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=${VPN_TYPE}
      - BLOCK_MALICIOUS=off
      - OPENVPN_USER=${OPENVPN_USER}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - OPENVPN_CIPHERS=AES-256-GCM
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - PORT_FORWARD_ONLY=on
      - VPN_PORT_FORWARDING=on
      - VPN_PORT_FORWARDING_UP_COMMAND=/bin/sh -c 'wget -O- --retry-connrefused --post-data "json={\"listen_port\":{{PORTS}}}" http://127.0.0.1:8080/api/v2/app/setPreferences 2>&1'
      - SERVER_COUNTRIES=${SERVER_COUNTRIES}
    volumes:
      - ${DOCKER_CONFIG_DIR}/gluetun:/gluetun
    restart: unless-stopped


############################
# QBITTORRENT		
############################
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - WEBUI_PORT=8080
    volumes:
      - ${DOCKER_CONFIG_DIR}/qbittorent:/config
      - /mnt/dataYmir/downloads:/downloads #optional
    restart: unless-stopped
    network_mode: "service:gluetun"